"use strict";(self.webpackChunkclass_doc=self.webpackChunkclass_doc||[]).push([[503],{2329:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"networking-part1","title":"Flutter Networking (Part 1)","description":"---","source":"@site/docs/networking-part1.md","sourceDirName":".","slug":"/networking-part1","permalink":"/class-doc/networking-part1","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"slug":"networking-part1","title":"Flutter Networking (Part 1)","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Simple Calculator","permalink":"/class-doc/calculator-tutorial"}}');var r=t(4848),o=t(8453);const i={slug:"networking-part1",title:"Flutter Networking (Part 1)",sidebar_position:2},d="Flutter networking (part 1)",c={},l=[{value:"1. Parse JSON t\u1eeb local asset b\u1eb1ng FutureBuilder",id:"1-parse-json-t\u1eeb-local-asset-b\u1eb1ng-futurebuilder",level:2},{value:"M\u1ee5c ti\xeau",id:"m\u1ee5c-ti\xeau",level:3},{value:"C\xe1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n",id:"c\xe1c-b\u01b0\u1edbc-th\u1ef1c-hi\u1ec7n",level:3},{value:"2. Parse JSON t\u1eeb network b\u1eb1ng HTTP GET",id:"2-parse-json-t\u1eeb-network-b\u1eb1ng-http-get",level:2},{value:"C\xe1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n",id:"c\xe1c-b\u01b0\u1edbc-th\u1ef1c-hi\u1ec7n-1",level:3},{value:"3. Refactoring",id:"3-refactoring",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"flutter-networking-part-1",children:"Flutter networking (part 1)"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"1-parse-json-t\u1eeb-local-asset-b\u1eb1ng-futurebuilder",children:"1. Parse JSON t\u1eeb local asset b\u1eb1ng FutureBuilder"}),"\n",(0,r.jsx)(e.h3,{id:"m\u1ee5c-ti\xeau",children:"M\u1ee5c ti\xeau"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Load file JSON t\u1eeb local asset trong th\u01b0 m\u1ee5c ",(0,r.jsx)(e.code,{children:"assets"}),"."]}),"\n",(0,r.jsx)(e.li,{children:"Parse d\u1eef li\u1ec7u th\xe0nh danh s\xe1ch to-do."}),"\n",(0,r.jsxs)(e.li,{children:["Hi\u1ec3n th\u1ecb danh s\xe1ch s\u1eed d\u1ee5ng Flutter ",(0,r.jsx)(e.code,{children:"FutureBuilder"}),"."]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"c\xe1c-b\u01b0\u1edbc-th\u1ef1c-hi\u1ec7n",children:"C\xe1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"B\u01b0\u1edbc 1: Chu\u1ea9n b\u1ecb file JSON:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["T\u1ea1o file ",(0,r.jsx)(e.code,{children:"todo.json"})," trong th\u01b0 m\u1ee5c ",(0,r.jsx)(e.code,{children:"assets"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Sao ch\xe9p n\u1ed9i dung JSON sau v\xe0o ",(0,r.jsx)(e.code,{children:"todo.json"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'[\n  {\n    "id": 1,\n    "task": "Learn Flutter Basics",\n    "isDone": true\n  },\n  {\n    "id": 2,\n    "task": "Understand Widgets",\n    "isDone": true\n  },\n  {\n    "id": 3,\n    "task": "Learn about FutureBuilder",\n    "isDone": false\n  },\n  {\n    "id": 4,\n    "task": "Fetch data from Network",\n    "isDone": false\n  }\n]\n\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.strong,{children:["B\u01b0\u1edbc 2: Khai b\xe1o asset trong ",(0,r.jsx)(e.code,{children:"pubspec.yaml"}),":"]})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"flutter:\n  assets:\n    - assets/todo_data.json\n\n"})}),"\n"]}),"\n",(0,r.jsx)(e.li,{}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Gi\u1edbi thi\u1ec7u nhanh v\u1ec1 FutureBuilder:"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"FutureBuilder"})," l\xe0 m\u1ed9t widget gi\xfap b\u1ea1n x\u1eed l\xfd d\u1eef li\u1ec7u b\u1ea5t \u0111\u1ed3ng b\u1ed9 trong Flutter. B\u1ea1n truy\u1ec1n v\xe0o m\u1ed9t ",(0,r.jsx)(e.code,{children:"Future"}),", v\xe0 ",(0,r.jsx)(e.code,{children:"FutureBuilder"})," s\u1ebd t\u1ef1 \u0111\u1ed9ng:"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Hi\u1ec3n th\u1ecb tr\u1ea1ng th\xe1i loading khi \u0111ang ch\u1edd d\u1eef li\u1ec7u."}),"\n",(0,r.jsx)(e.li,{children:"Hi\u1ec3n th\u1ecb l\u1ed7i n\u1ebfu c\xf3 v\u1ea5n \u0111\u1ec1 x\u1ea3y ra."}),"\n",(0,r.jsxs)(e.li,{children:["Hi\u1ec3n th\u1ecb d\u1eef li\u1ec7u khi ",(0,r.jsx)(e.code,{children:"Future"})," ho\xe0n th\xe0nh."]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["Nh\u1edd ",(0,r.jsx)(e.code,{children:"FutureBuilder"}),", b\u1ea1n kh\xf4ng c\u1ea7n t\u1ef1 vi\u1ebft code \u0111\u1ec3 qu\u1ea3n l\xfd t\u1eebng tr\u1ea1ng th\xe1i. Ch\u1ec9 c\u1ea7n cung c\u1ea5p ",(0,r.jsx)(e.code,{children:"future"})," v\xe0 x\xe2y d\u1ef1ng UI (th\xf4ng qua thu\u1ed9c t\xednh ",(0,r.jsx)(e.code,{children:"builder"}),"), Flutter s\u1ebd lo ph\u1ea7n c\xf2n l\u1ea1i."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"B\u01b0\u1edbc 3: load v\xe0 parse JSON t\u1eeb local asset:"})}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-dart",children:"import 'dart:convert'; // for jsonDecode\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart'; // for rootBundle\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Todo App',\n      theme: ThemeData(primarySwatch: Colors.blue),\n      home: const TodoListScreen(),\n    );\n  }\n}\n\nclass TodoListScreen extends StatefulWidget {\n  const TodoListScreen({super.key});\n\n  @override\n  State<TodoListScreen> createState() => _TodoListScreenState();\n}\n\nclass _TodoListScreenState extends State<TodoListScreen> {\n  late Future<List<TodoItem>> futureTodoList;\n\n  @override\n  void initState() {\n    super.initState();\n    futureTodoList = loadTodoFromAssets();\n  }\n\n  // Load JSON from local asset\n  Future<List<TodoItem>> loadTodoFromAssets() async {\n    // Read file as String\n    final jsonString = await rootBundle.loadString('assets/todo.json');\n    // Convert JSON String to List\n    final List<dynamic> decodedJson = jsonDecode(jsonString) as List<dynamic>;\n    // Map each item to TodoItem\n    return decodedJson.map((e) => TodoItem.fromJson(e)).toList();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Todo List - From Assets'),\n      ),\n      body: FutureBuilder<List<TodoItem>>(\n        future: futureTodoList,\n        builder: (context, snapshot) {\n          // Check connection state loading\n          if (snapshot.connectionState == ConnectionState.waiting) {\n            return const Center(child: CircularProgressIndicator());\n            // Check if error\n          } else if (snapshot.hasError) {\n            return Center(child: Text('Error: ${snapshot.error}'));\n          } else {\n            // Data is ready\n            final todoList = snapshot.data!;\n            return ListView.builder(\n              itemCount: todoList.length,\n              itemBuilder: (context, index) {\n                final todo = todoList[index];\n                return CheckboxListTile(\n                  title: Text(todo.task),\n                  value: todo.isDone,\n                  onChanged: (newValue) {\n                    setState(() {\n                      todo.isDone = newValue!;\n                    });\n                  },\n                );\n              },\n            );\n          }\n        },\n      ),\n    );\n  }\n}\n\n// Simple model class\nclass TodoItem {\n  int id;\n  String task;\n  bool isDone;\n\n  TodoItem({\n    required this.id,\n    required this.task,\n    required this.isDone,\n  });\n\n  factory TodoItem.fromJson(Map<String, dynamic> json) {\n    return TodoItem(\n      id: json['id'],\n      task: json['task'],\n      isDone: json['isDone'],\n    );\n  }\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Gi\u1ea3i th\xedch (What\u2019s happening here):"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"rootBundle.loadString('assets/todo_data.json')"}),":"]})," \u0110\u1ecdc file JSON local d\u01b0\u1edbi d\u1ea1ng string (m\u1ea5t th\u1eddi gian, n\xean tr\u1ea3 v\u1ec1 Future)."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"jsonDecode"}),":"]})," Chuy\u1ec3n string JSON th\xe0nh m\u1ed9t ",(0,r.jsx)(e.code,{children:"List"})," c\u1ee7a Dart. (ho\u1eb7c c\xf3 th\u1ec3 tr\u1ea3 v\u1ec1 Map object)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"TodoItem.fromJson"}),":"]})," create object ",(0,r.jsx)(e.code,{children:"TodoItem"})," t\u1eeb t\u1eebng ph\u1ea7n t\u1eed JSON."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"FutureBuilder"}),":"]})," L\u1eafng nghe qu\xe1 tr\xecnh loading d\u1eef li\u1ec7u b\u1ea5t \u0111\u1ed3ng b\u1ed9:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Hi\u1ec3n th\u1ecb ti\u1ebfn tr\xecnh loading khi ch\u1edd (ConnectionState.waiting)."}),"\n",(0,r.jsxs)(e.li,{children:["Hi\u1ec3n th\u1ecb l\u1ed7i n\u1ebfu ",(0,r.jsx)(e.code,{children:"snapshot.hasError"}),"."]}),"\n",(0,r.jsx)(e.li,{children:"Hi\u1ec3n th\u1ecb ListView d\u1eef li\u1ec7u khi \u0111\xe3 parse xong."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"setState(() { ... })"}),":"]})," M\u1ed7i khi checkbox thay \u0111\u1ed5i, ",(0,r.jsx)(e.code,{children:"setState"})," c\u1eadp nh\u1eadt UI ngay l\u1eadp t\u1ee9c."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"2-parse-json-t\u1eeb-network-b\u1eb1ng-http-get",children:"2. Parse JSON t\u1eeb network b\u1eb1ng HTTP GET"}),"\n",(0,r.jsxs)(e.p,{children:["Ph\u1ea7n n\xe0y thay th\u1ebf logic load JSON local b\u1eb1ng vi\u1ec7c g\u1ecdi HTTP GET qua package ",(0,r.jsx)(e.a,{href:"https://pub.dev/packages/http",children:"http"}),". C\xe1c ph\u1ea7n kh\xe1c gi\u1eef nguy\xean."]}),"\n",(0,r.jsx)(e.h3,{id:"c\xe1c-b\u01b0\u1edbc-th\u1ef1c-hi\u1ec7n-1",children:"C\xe1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.strong,{children:["B\u01b0\u1edbc 1: Th\xeam package ",(0,r.jsx)(e.code,{children:"http"})," v\xe0o ",(0,r.jsx)(e.code,{children:"pubspec.yaml"}),":"]})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"dependencies:\n  http: ^0.13.0\n\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"B\u01b0\u1edbc 2: Thay th\u1ebf h\xe0m load JSON:"}),"\nGi\u1ea3 s\u1eed b\u1ea1n c\xf3 endpoint ",(0,r.jsx)(e.a,{href:"https://dummyjson.com/c/562b-f00f-4082-9583",children:"https://dummyjson.com/c/562b-f00f-4082-9583"})," tr\u1ea3 v\u1ec1 JSON t\u01b0\u01a1ng t\u1ef1."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-dart",children:"import 'dart:convert';\nimport 'package:flutter/material.dart';\nimport 'package:http/http.dart' as http; // new import\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Todo App',\n      theme: ThemeData(primarySwatch: Colors.blue),\n      home: const TodoListScreen(),\n    );\n  }\n}\n\nclass TodoListScreen extends StatefulWidget {\n  const TodoListScreen({super.key});\n\n  @override\n  State<TodoListScreen> createState() => _TodoListScreenState();\n}\n\nclass _TodoListScreenState extends State<TodoListScreen> {\n  late Future<List<TodoItem>> futureTodoList;\n\n  @override\n  void initState() {\n    super.initState();\n    futureTodoList = loadTodoFromNetwork();\n  }\n\n  // Load JSON from network\n  Future<List<TodoItem>> loadTodoFromNetwork() async {\n    final url = Uri.parse('https://dummyjson.com/c/562b-f00f-4082-9583');\n    // Send HTTP GET request\n    final response = await http.get(url);\n\n    if (response.statusCode == 200) {\n      // Decode JSON response\n      final List decodedJson = jsonDecode(response.body);\n      // Map to model\n      return decodedJson.map((e) => TodoItem.fromJson(e)).toList();\n    } else {\n      throw Exception('Failed to load to-do list');\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('Todo List - From Network')),\n      body: FutureBuilder<List<TodoItem>>(\n        future: futureTodoList,\n        builder: (context, snapshot) {\n          if (snapshot.connectionState == ConnectionState.waiting) {\n            return const Center(child: CircularProgressIndicator());\n          } else if (snapshot.hasError) {\n            return Center(child: Text('Error: ${snapshot.error}'));\n          } else {\n            final todoList = snapshot.data!;\n            return ListView.builder(\n              itemCount: todoList.length,\n              itemBuilder: (context, index) {\n                final todo = todoList[index];\n                return CheckboxListTile(\n                  title: Text(todo.task),\n                  value: todo.isDone,\n                  onChanged: (newValue) {\n                    setState(() {\n                      todo.isDone = newValue!;\n                    });\n                  },\n                );\n              },\n            );\n          }\n        },\n      ),\n    );\n  }\n}\n\nclass TodoItem {\n  int id;\n  String task;\n  bool isDone;\n\n  TodoItem({\n    required this.id,\n    required this.task,\n    required this.isDone,\n  });\n\n  factory TodoItem.fromJson(Map<String, dynamic> json) {\n    return TodoItem(\n      id: json['id'],\n      task: json['task'],\n      isDone: json['isDone'],\n    );\n  }\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Gi\u1ea3i th\xedch (What\u2019s happening here):"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"http.get(url)"}),":"]})," G\u1eedi request GET \u0111\u1ebfn server \u0111\u1ec3 l\u1ea5y d\u1eef li\u1ec7u JSON."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"response.statusCode == 200"}),":"]})," Ki\u1ec3m tra xem server tr\u1ea3 v\u1ec1 status code 200 (th\xe0nh c\xf4ng) hay kh\xf4ng."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"jsonDecode(response.body)"}),":"]})," Parse string JSON t\u1eeb server th\xe0nh ",(0,r.jsx)(e.code,{children:"List"})," Dart. (c\xf3 th\u1ec3 parse th\xe0nh map object."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"TodoItem.fromJson"}),":"]})," D\xf9ng factory constructor c\u0169 \u0111\u1ec3 chuy\u1ec3n \u0111\u1ed5i t\u1eebng ph\u1ea7n t\u1eed sang object ",(0,r.jsx)(e.code,{children:"TodoItem"}),"."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"FutureBuilder"}),":"]})," V\u1eabn x\u1eed l\xfd ba tr\u1ea1ng th\xe1i ch\xednh (loading, error, success) t\u01b0\u01a1ng t\u1ef1 nh\u01b0 khi parse local JSON."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.code,{children:"setState(() { ... })"}),":"]})," Update UI khi checkbox thay \u0111\u1ed5i."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"3-refactoring",children:"3. Refactoring"}),"\n",(0,r.jsx)(e.p,{children:"Khi \u0111\xe3 hi\u1ec3u quy tr\xecnh, b\u1ea1n c\xf3 th\u1ec3 refactor code:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"T\u1ea1o service file"})," ri\xeang (v\xed d\u1ee5: ",(0,r.jsx)(e.code,{children:"todo_service.dart"}),") x\u1eed l\xfd load t\u1eeb local ho\u1eb7c network."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"T\xe1ch model"})," ",(0,r.jsx)(e.code,{children:"TodoItem"})," v\xe0o file ri\xeang (",(0,r.jsx)(e.code,{children:"todo_item.dart"}),")."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"T\xe1ch widget"})," \u0111\u1ec3 code trong ",(0,r.jsx)(e.code,{children:"main.dart"})," ho\u1eb7c ",(0,r.jsx)(e.code,{children:"todo_list_screen.dart"})," ch\u1ec9 t\u1eadp trung v\xe0o UI."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"C\xe1ch n\xe0y gi\xfap code g\u1ecdn g\xe0ng h\u01a1n, d\u1ec5 b\u1ea3o tr\xec khi app ph\xe1t tri\u1ec3n. Tuy nhi\xean, n\u1ebfu b\u1ea1n m\u1edbi b\u1eaft \u0111\u1ea7u, gi\u1eef m\u1ecdi th\u1ee9 \u1edf m\u1ed9t file v\u1eabn d\u1ec5 theo d\xf5i h\u01a1n."}),"\n",(0,r.jsx)(e.hr,{})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>d});var s=t(6540);const r={},o=s.createContext(r);function i(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);